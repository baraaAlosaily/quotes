/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;


import com.google.gson.reflect.TypeToken;
import org.junit.jupiter.api.Test;

import java.io.*;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import java.util.Random;

import com.google.gson.Gson;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
// Lab 8
    @Test void appHasAGreeting() throws FileNotFoundException {
        Reader reader =new FileReader("../app/src/main/resources/recentquotes.json");
        Type collectionsType=new TypeToken<List<Books>>(){}.getType();
        List<Books> booksList= new Gson().fromJson(reader,collectionsType);
        Random random=new Random();
        int ranNum= random.nextInt((booksList.size()-1)+1);
        String str=booksList.get(ranNum).toString();
        assertEquals(str,booksList.get(ranNum).toString());

    }
    //lab 9
    @Test void apiTesting() throws IOException{
        String url = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        HttpURLConnection connect = (HttpURLConnection) new URL(url).openConnection();


        connect.setRequestMethod("GET");
        connect.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");

        int resCode=connect.getResponseCode();
        if (resCode==HttpURLConnection.HTTP_OK) {
            InputStreamReader inputStreamReader = new InputStreamReader(connect.getInputStream());
            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
            String data = bufferedReader.readLine();
            bufferedReader.close();
            Gson gson = new Gson();
            Quotes ownQuote = gson.fromJson(data, Quotes.class);
            String findAuther = ownQuote.getAutherQuotes();
            String findQuote = ownQuote.getTextQuotes();


            System.out.println("Results From API:");
            System.out.println("Book Author: " + findAuther);
            System.out.println("Book Quote: " + findQuote);
            String str="Books{author='"+findAuther+"', text='"+findQuote+"'}";
            Books myAccount = new Books(findAuther, findQuote);
            Writer writer = new FileWriter("../app/src/main/resources/recentquotes.json", true);
            gson.toJson(myAccount, writer);
            writer.close();
            assertEquals(str, myAccount.toString());
        }
    }
}
